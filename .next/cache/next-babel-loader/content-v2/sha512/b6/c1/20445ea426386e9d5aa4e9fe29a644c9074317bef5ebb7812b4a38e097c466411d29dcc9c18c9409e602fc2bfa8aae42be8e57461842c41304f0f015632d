{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\OneDrive\\\\Work\\\\udemy\\\\Maximilian\\\\react\\\\next.js bigger project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from 'next/head';\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = HomePage;\n\n/*\r\n// in order to always revalidate the page and not every second or similar like in the function above. So whenever the page is requested you get it again\r\n\r\nexport async function getServerSideProps(context){\r\n  const req = context.req;  // to check seesion cookie or similar.\r\n  const res = context.res;\r\n\r\n  // fetch some data\r\n  // read some data from database\r\n\r\n  return {\r\n    props:{\r\n      meetups: DUMMY_MEETUPS\r\n    },\r\n  };\r\n}\r\n*/\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["D:/OneDrive/Work/udemy/Maximilian/react/next.js bigger project/pages/index.js"],"names":["Fragment","MeetupList","Head","HomePage","props","meetups"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAG,aAAb;AAA2B,QAAA,OAAO,EAAG;AAArC;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMF,Q;;AAqCN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport Head from 'next/head';\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>React meetups</title>\r\n        <meta name = \"description\" content = \"Browse a huge list of highly active React meetups !\" />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  // fetch some data\r\n  // read some data from database\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dnanusevski:djYCU3eAaQnK5SMa@cluster0.ctznz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find().toArray(); //gets all data\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1, // to rebuild the page and to get new ontent each time the request to page is made, and if 1 second has passed untill last request to page\r\n  };\r\n}\r\n\r\n/*\r\n// in order to always revalidate the page and not every second or similar like in the function above. So whenever the page is requested you get it again\r\n\r\nexport async function getServerSideProps(context){\r\n  const req = context.req;  // to check seesion cookie or similar.\r\n  const res = context.res;\r\n\r\n  // fetch some data\r\n  // read some data from database\r\n\r\n  return {\r\n    props:{\r\n      meetups: DUMMY_MEETUPS\r\n    },\r\n  };\r\n}\r\n*/\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}