{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\OneDrive\\\\Work\\\\udemy\\\\Maximilian\\\\react\\\\next.js bigger project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add new meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetup.image,\n      title: props.meetup.title,\n      address: props.meetup.address,\n      description: props.meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/OneDrive/Work/udemy/Maximilian/react/next.js bigger project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","Fragment","MeetupDetails","props","meetup","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,MAAN,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAG,aAAb;AAA2B,QAAA,OAAO,EAAG;AAArC;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaE,KADtB;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaC,KAFtB;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaG,OAHxB;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAJ5B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;KAAMN,a;;AAwDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetup.title}</title>\r\n        <meta name = \"description\" content = \"Add new meetup\" />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetup.image}\r\n        title={props.meetup.title}\r\n        address={props.meetup.address}\r\n        description={props.meetup.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dnanusevski:djYCU3eAaQnK5SMa@cluster0.ctznz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const projection = { _id: 1, data: { title: 1 } };\r\n  const meetups = await meetupCollection.find().project(projection).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dnanusevski:djYCU3eAaQnK5SMa@cluster0.ctznz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetup: selectedMeetup.data,\r\n    },\r\n\r\n    revalidate: 86400,\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}