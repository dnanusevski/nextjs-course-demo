{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\OneDrive\\\\Work\\\\udemy\\\\Maximilian\\\\react\\\\next.js bigger project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A first meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Stome address 5, 123455 Some citty\",\n  description: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A second meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Stome address 10, 123455 Some citty 2\",\n  description: \"This is a second meetup\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // fetch some data\n  // read some data from database\n  const client = await MongoClient.connect(\"mongodb+srv://dnanusevski:djYCU3eAaQnK5SMa@cluster0.ctznz.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find().toArray(); //gets all data\n\n  client.close();\n  console.log(meetups);\n  return {\n    props: {\n      meetups: {\n        props: DUMMY_MEETUPS\n      }\n    },\n    revalidate: 1 // to rebuild the page and to get new ontent each time the request to page is made, and if 1 second has passed untill last request to page\n\n  };\n}\n/*\r\n// in order to always revalidate the page and not every second or similar like in the function above. So whenever the page is requested you get it again\r\n\r\nexport async function getServerSideProps(context){\r\n  const req = context.req;  // to check seesion cookie or similar.\r\n  const res = context.res;\r\n\r\n  // fetch some data\r\n  // read some data from database\r\n\r\n  return {\r\n    props:{\r\n      meetups: DUMMY_MEETUPS\r\n    },\r\n  };\r\n}\r\n*/\n\nexport default HomePage;","map":{"version":3,"sources":["D:/OneDrive/Work/udemy/Maximilian/react/next.js bigger project/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","console","log","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,oCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EAUpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,wHAJJ;AAKEC,EAAAA,OAAO,EAAE,uCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAVoB,CAAtB;;AAoBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,2GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB,CAVqC,CAUoB;;AAEzDN,EAAAA,MAAM,CAACO,KAAP;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AAEA,SAAO;AACLD,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AACPD,QAAAA,KAAK,EAACP;AADC;AADJ,KADF;AAMLoB,IAAAA,UAAU,EAAE,CANP,CAMU;;AANV,GAAP;AAUD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAed,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A first meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Stome address 5, 123455 Some citty\",\r\n    description: \"This is a first meetup\",\r\n  },\r\n\r\n  {\r\n    id: \"m2\",\r\n    title: \"A second meetup\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n    address: \"Stome address 10, 123455 Some citty 2\",\r\n    description: \"This is a second meetup\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  // fetch some data\r\n  // read some data from database\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dnanusevski:djYCU3eAaQnK5SMa@cluster0.ctznz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find().toArray(); //gets all data\r\n\r\n  client.close();\r\n\r\n  console.log(meetups);\r\n \r\n  return {\r\n    props: {\r\n      meetups: {\r\n        props:DUMMY_MEETUPS\r\n      },\r\n    },\r\n    revalidate: 1, // to rebuild the page and to get new ontent each time the request to page is made, and if 1 second has passed untill last request to page\r\n  };\r\n\r\n\r\n}\r\n\r\n/*\r\n// in order to always revalidate the page and not every second or similar like in the function above. So whenever the page is requested you get it again\r\n\r\nexport async function getServerSideProps(context){\r\n  const req = context.req;  // to check seesion cookie or similar.\r\n  const res = context.res;\r\n\r\n  // fetch some data\r\n  // read some data from database\r\n\r\n  return {\r\n    props:{\r\n      meetups: DUMMY_MEETUPS\r\n    },\r\n  };\r\n}\r\n*/\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}